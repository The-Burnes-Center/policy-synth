events {
  worker_connections  1024;
}

http {
  upstream nodejs {
          server localhost:9080;
  }

  server {
        listen 80;
        server_name _;
        large_client_header_buffers 4 32k;

        client_max_body_size 256M;
        return         301 https://$server_name$request_uri;
  }

  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name _;

    large_client_header_buffers 4 32k;

    client_max_body_size 256M;

    ssl_certificate /root/bundle.pem;
    ssl_certificate_key /root/private.pem;

    root /home/app/webApps/policy-synth/dist;



    location / {
            proxy_set_header Host $http_host;
            proxy_pass http://nodejs;
#	    add_header Content-Security-Policy "frame-ancestors 'self' https://rebootdemocracy.ai http://localhost";

            #add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header X-Content-Type-Options "nosniff" always;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-NginX-Proxy true;

            # WebSocket specific
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            add_header Referrer-Policy "no-referrer-when-downgrade" always;
            #add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
            # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
            # enable strict transport security only if you understand the implications
    }

location /webhook/ {
    proxy_pass http://localhost:9000/;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-NginX-Proxy true;

    # WebSocket specific
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
}

    location ^~ /public/storage/ {
      expires 365d;
      add_header Cache-Control "public";
    }
  }
}
