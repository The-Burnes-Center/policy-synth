{"version":3,"file":"ps-operations-agent.js","sourceRoot":"","sources":["../../src/operations/ps-operations-agent.ts"],"names":[],"mappings":"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","sourcesContent":["import { css, html, nothing } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\n\nimport '@material/web/iconbutton/icon-button.js';\nimport '@material/web/progress/circular-progress.js';\nimport '@material/web/menu/menu.js';\nimport '@material/web/menu/menu-item.js';\n\nimport { OpsServerApi } from './OpsServerApi.js';\nimport { PsOperationsView } from './ps-operations-view.js';\nimport { MdMenu } from '@material/web/menu/menu.js';\nimport { YpBaseElement } from '@yrpri/webapp/common/yp-base-element.js';\n\n@customElement('ps-operations-agent')\nexport class PsOperationsAgent extends YpBaseElement {\n  @property({ type: String })\n  nodeId!: string;\n\n  @property({ type: Object })\n  agentClass!: PsAgentClass;\n\n  @property({ type: Number })\n  agentId!: number;\n\n  api: OpsServerApi;\n\n  constructor() {\n    super();\n    this.api = new OpsServerApi();\n  }\n\n  override async connectedCallback() {\n    super.connectedCallback();\n  }\n\n  override updated(changedProperties: Map<string | number | symbol, unknown>): void {\n    super.updated(changedProperties);\n  }\n\n  override disconnectedCallback(): void {\n    super.disconnectedCallback();\n  }\n\n  static override get styles() {\n    return [\n      super.styles,\n      css`\n        .causeText {\n          font-size: 14px;\n          padding: 8px;\n          height: 100%;\n          width: 100%;\n          max-height: 70px;\n          overflow-y: auto;\n        }\n\n        .causeText[is-ude] {\n          max-height: 75px;\n        }\n\n        .causeTextContainer {\n          height: 100%;\n        }\n\n        .causeText[root-cause] {\n        }\n\n        .createOptionsButtons {\n          display: flex;\n          justify-content: center;\n          position: absolute;\n          bottom: 0;\n          left: 0;\n          right: 0;\n          padding-left: 8px;\n          padding-right: 8px;\n        }\n\n        .createOptionsButtons[root-cause] {\n        }\n\n        .editButton {\n          position: absolute;\n          bottom: 0;\n          right: 0;\n          z-index: 1500;\n        }\n\n        .typeIconCore {\n          position: absolute;\n          bottom: 8px;\n          left: 8px;\n        }\n\n        .typeIcon {\n          color: var(--md-sys-color-primary);\n        }\n\n        .typeIconUde {\n          color: var(--md-sys-color-tertiary);\n        }\n\n        .typeIconRoot {\n          color: var(--md-sys-color-on-primary);\n        }\n\n        md-icon-button[root-cause] {\n          --md-icon-button-icon-color: var(--md-sys-color-on-primary);\n        }\n\n        md-circular-progress {\n          --md-circular-progress-size: 28px;\n          margin-bottom: 6px;\n        }\n\n        md-menu {\n          --md-menu-z-index: 1000;\n          z-index: 1000;\n        }\n\n        [hidden] {\n          display: none !important;\n        }\n      `,\n    ];\n  }\n\n  async createDirectCauses() {\n\n    const nodes = await this.api.createDirectCauses(this.agentId, this.nodeId);\n\n    this.fireGlobal('add-nodes', {\n      parentNodeId: this.nodeId,\n      nodes,\n    });\n\n    this.isCreatingCauses = false;\n  }\n\n  editNode() {\n    this.fire('edit-node', {\n      nodeId: this.nodeId,\n      element: this,\n    });\n  }\n\n  get crtTypeIconClass() {\n    switch (this.crtNodeType) {\n      case 'ude':\n        return 'typeIconUde';\n      case 'rootCause':\n        return 'typeIconRoot';\n      default:\n        console.log('crtNodeType', this.crtNodeType);\n        return 'typeIcon';\n    }\n  }\n\n  toggleMenu() {\n    const menu = this.shadowRoot?.getElementById('menu') as MdMenu;\n    menu.open = !menu.open;\n  }\n\n  get crtTypeIcon() {\n    if (this.isRootCause) {\n      return 'flag';\n    } else {\n      switch (this.crtNodeType) {\n        case 'ude':\n          return 'bug_report';\n        case 'directCause':\n          return 'arrow_upward';\n        case 'intermediateCause':\n          return 'link';\n        case 'rootCause':\n          return 'flag';\n        case 'assumption':\n          return 'question_mark';\n        default:\n          return 'more_vert';\n      }\n    }\n  }\n\n  override render() {\n    return html`\n      <div\n        class=\"layout vertical mainContainer\"\n        ?root-cause=\"${this.isRootCause}\"\n      >\n        <div class=\"layout horizontal causeTextContainer\">\n          <div\n            class=\"causeText\"\n            ?is-ude=\"${this.crtNodeType === 'ude'}\"\n            ?root-cause=\"${this.isRootCause}\"\n          >\n            ${this.causeDescription}\n          </div>\n        </div>\n\n        <md-icon class=\"typeIconCore ${this.crtTypeIconClass}\"\n          >${this.crtTypeIcon}</md-icon\n        >\n\n        <md-icon-button\n          ?root-cause=\"${this.isRootCause}\"\n          class=\"editButton\"\n          @click=\"${this.editNode}\"\n          ><md-icon>edit</md-icon></md-icon-button\n        >\n\n        <div\n          class=\"layout horizontal center-justify createOptionsButtons\"\n          ?root-cause=\"${this.isRootCause}\"\n        >\n          ${this.isCreatingCauses\n            ? html`\n                <md-circular-progress indeterminate></md-circular-progress>\n              `\n            : html`\n                <md-icon-button\n                  ?root-cause=\"${this.isRootCause}\"\n                  class=\"createOptionsButton\"\n                  ?hidden=\"${this.crtNodeType === 'rootCause'}\"\n                  @click=\"${() =>\n                    this.fire('open-add-cause-dialog', {\n                      parentNodeId: this.nodeId,\n                    })}\"\n                  ><md-icon>add</md-icon></md-icon-button\n                >\n              `}\n        </div>\n      </div>\n    `;\n  }\n}\n"]}